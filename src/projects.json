{
  "projects": [
    {
      "nickname": "grand-tour-gc-riders",
      "type": "Collection App",
      "name": "Grand Tour GC Riders",
      "siteLink": "https://grand-tour-gc-riders.2023-bertr.dev.io-academy.uk/",
      "githubLink": "https://github.com/albertRowett/grand-tour-gc-riders",
      "images": [
        "./images/projects/grand-tour-gc-riders/grand-tour-gc-riders-0.png",
        "./images/projects/grand-tour-gc-riders/grand-tour-gc-riders-1.png",
        "./images/projects/grand-tour-gc-riders/grand-tour-gc-riders-2.png",
        "./images/projects/grand-tour-gc-riders/grand-tour-gc-riders-3.png",
        "./images/projects/grand-tour-gc-riders/grand-tour-gc-riders-4.png"
      ],
      "imageAltTexts": [
        "Riders on the index page",
        "'Add Rider' page",
        "Riders on the 'Retired' page",
        "'Nationality = Danish' filter applied on the index page",
        "Jonas Vingegaard's 'Edit Rider' page"
      ],
      "description": [
        "A database-backed web app showcasing professional cycling's top general classification (GC) riders.",
        "As part of my bootcamp, I developed this app without a framework to focus on core back-end principles, using OOP in PHP for server-side logic and writing manual SQL queries.",
        "Revisiting the project a year later, I restructured the codebase's logic and SQL queries, improving readability and reusability â€“ demonstrating my growth in following best practices."
      ]
    },
    {
      "nickname": "canucks-roster-api",
      "type": "RESTful API",
      "name": "Vancouver Canucks Roster API",
      "siteLink": "https://canucks-roster-api.2023-bertr.dev.io-academy.uk/",
      "githubLink": "https://github.com/albertRowett/canucks-roster-api",
      "images": [
        "./images/projects/canucks-roster-api/canucks-roster-api-0.svg",
        "./images/projects/canucks-roster-api/canucks-roster-api-1.png"
      ],
      "imageAltTexts": ["ER diagram of the database", "API documentation"],
      "description": [
        "An API tracking the roster of the Vancouver Canucks ice hockey team.",
        "Written in PHP, I used Laravel's MVC architecture with Eloquent ORM to define and manage complex model relationships, ensuring maintainable and scalable database queries.",
        "I implemented HTTP tests to ensure reliability and maintainability, and created a Blade template to display the API's documentation on the front end."
      ]
    },
    {
      "nickname": "blackjack",
      "type": "JavaScript Game",
      "name": "Blackjack",
      "siteLink": "https://blackjack.2023-bertr.dev.io-academy.uk/",
      "githubLink": "https://github.com/albertRowett/blackjack",
      "images": [
        "./images/projects/blackjack/blackjack-0.png",
        "./images/projects/blackjack/blackjack-1.png",
        "./images/projects/blackjack/blackjack-2.png",
        "./images/projects/blackjack/blackjack-3.png",
        "./images/projects/blackjack/blackjack-4.png",
        "./images/projects/blackjack/blackjack-5.png"
      ],
      "imageAltTexts": [
        "Blackjack title screen",
        "Wagering",
        "Playing a split hand",
        "A hand result",
        "Cash out confirmation",
        "Game end"
      ],
      "description": [
        "A dynamic, free-to-play online blackjack game.",
        "I used HTML/Tailwind CSS for the interface and plain JavaScript for logic, focusing on writing efficient game functions while keeping the codebase simple and lightweight.",
        "I decoupled game mechanics from the visuals and added features incrementally. This occasionally necessitated refactoring, but resulted in cleaner, more maintainable code."
      ]
    }
  ]
}
